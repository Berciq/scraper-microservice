import pathlib

import api.build_database
import pytest
from api.config import connex_app, db, storage
from api.models import ScrapedImage, ScrapedText, ScrapeJob

SPEC_FOLDER = pathlib.Path(__file__).parent.parent

SINGLE_PIXEL_JPG = b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00H\x00H\x00\x00\xff\xdb\x00C\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xff\xdb\x00C\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xff\xc0\x00\x11\x08\x00\x01\x00\x01\x03\x01\x11\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x14\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\xff\xc4\x00\x14\x10\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xc4\x00\x14\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xc4\x00\x14\x11\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\x7f\x00\xff\xd9'

@pytest.fixture(scope="session")
def app():
    connex_app.add_api('swagger.yaml', validate_responses=True)
    return connex_app.app

@pytest.fixture(scope="function", autouse=True)
def clean_up():
    db.create_all()
    yield
    db.drop_all()

@pytest.fixture(scope="function")
def prepopulated_db(clean_up):
    job = ScrapeJob(url='http://www.example.com', is_finished=True)
    db.session.add(job)
    text = ScrapedText(scrape_job=job, text='Hello world!')
    db.session.add(text)
    storage.put_image('1.jpg', SINGLE_PIXEL_JPG)
    storage.put_image('2.jpg', SINGLE_PIXEL_JPG)
    img1 = ScrapedImage(scrape_job=job, id=1, path='1.jpg')
    img2 = ScrapedImage(scrape_job=job, id=2, path='2.jpg')
    db.session.add(img1)
    db.session.add(img2)
    db.session.commit()
    yield db